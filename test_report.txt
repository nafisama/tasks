
> react-typescript-starter@0.1.0 test
> react-scripts test

Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
PASS src/nested.test.ts
  ● Console

    console.log
      options are red,apple,firetruck

      at handler (src/nested.ts:235:17)
          at Array.map (<anonymous>)

    console.log
      options are red,apple,firetruck

      at handler (src/nested.ts:235:17)
          at Array.map (<anonymous>)

PASS src/arrays.test.ts
PASS src/objects.test.ts
PASS src/components/StartAttempt.test.tsx
FAIL src/components/TwoDice.test.tsx
  ● TwoDice Component tests › The `left-die` and `right-die` are two different numbers

    expect(received).not.toBeNull()

    Received: null

      35 |         const rightNumber = extractDigits(rightDie);
      36 |         // Then they are two numbers
    > 37 |         expect(leftNumber).not.toBeNull();
         |                                ^
      38 |         expect(rightNumber).not.toBeNull();
      39 |         // Then they are two different numbers
      40 |         expect(leftNumber).not.toEqual(rightNumber);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:37:32)

  ● TwoDice Component tests › Clicking left button changes first number

    expect(received).toEqual(expected) // deep equality

    Expected: 5
    Received: null

      55 |         // And the number to be 5
      56 |         const leftNumber = extractDigits(screen.getByTestId("left-die"));
    > 57 |         expect(leftNumber).toEqual(5);
         |                            ^
      58 |     });
      59 |     // Clicking right button changes second number
      60 |     test("Clicking right button changes second number", () => {

      at Object.<anonymous> (src/components/TwoDice.test.tsx:57:28)

  ● TwoDice Component tests › Clicking right button changes second number

    expect(received).toEqual(expected) // deep equality

    Expected: 5
    Received: null

      67 |         // And the number to be 5
      68 |         const rightNumber = extractDigits(screen.getByTestId("right-die"));
    > 69 |         expect(rightNumber).toEqual(5);
         |                             ^
      70 |     });
      71 |     // Rolling two different numbers does not win or lose the game
      72 |     test("Rolling two different numbers does not win or lose the game", () => {

      at Object.<anonymous> (src/components/TwoDice.test.tsx:69:29)

  ● TwoDice Component tests › Rolling two different numbers does not win or lose the game

    expect(received).toEqual(expected) // deep equality

    Expected: 1
    Received: null

      82 |         const leftNumber = extractDigits(leftDie);
      83 |         const rightNumber = extractDigits(rightDie);
    > 84 |         expect(leftNumber).toEqual(1);
         |                            ^
      85 |         expect(rightNumber).toEqual(6);
      86 |         // And then the game is not won
      87 |         const winText = screen.queryByText(/Win/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:84:28)

  ● TwoDice Component tests › Getting snake eyes loses the game

    expect(received).toEqual(expected) // deep equality

    Expected: 1
    Received: null

      106 |         const leftNumber = extractDigits(leftDie);
      107 |         const rightNumber = extractDigits(rightDie);
    > 108 |         expect(leftNumber).toEqual(1);
          |                            ^
      109 |         expect(rightNumber).toEqual(1);
      110 |         // And then the game is not won
      111 |         const winText = screen.queryByText(/Win/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:108:28)

  ● TwoDice Component tests › Getting matching numbers wins the game

    expect(received).toEqual(expected) // deep equality

    Expected: 5
    Received: null

      129 |         const leftNumber = extractDigits(leftDie);
      130 |         const rightNumber = extractDigits(rightDie);
    > 131 |         expect(leftNumber).toEqual(5);
          |                            ^
      132 |         expect(rightNumber).toEqual(5);
      133 |         // And then the game is not lost
      134 |         const loseText = screen.queryByText(/Lose/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:131:28)

PASS src/HtmlCss.test.tsx
PASS src/functions.test.ts
PASS src/components/ChangeType.test.tsx
PASS src/components/CycleHoliday.test.tsx
PASS src/components/Counter.test.tsx
PASS src/components/RevealAnswer.test.tsx
PASS src/text.test.tsx
PASS src/App.test.tsx
-------------------|---------|----------|---------|---------|-------------------
File               | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-------------------|---------|----------|---------|---------|-------------------
All files          |     100 |    98.88 |     100 |     100 |                   
 src               |     100 |    98.48 |     100 |     100 |                   
  App.tsx          |     100 |      100 |     100 |     100 |                   
  arrays.ts        |     100 |      100 |     100 |     100 |                   
  functions.ts     |     100 |      100 |     100 |     100 |                   
  nested.ts        |     100 |      100 |     100 |     100 |                   
  objects.ts       |     100 |    91.66 |     100 |     100 | 51                
 src/components    |     100 |      100 |     100 |     100 |                   
  ChangeType.tsx   |     100 |      100 |     100 |     100 |                   
  Counter.tsx      |     100 |      100 |     100 |     100 |                   
  CycleHoliday.tsx |     100 |      100 |     100 |     100 |                   
  RevealAnswer.tsx |     100 |      100 |     100 |     100 |                   
  StartAttempt.tsx |     100 |      100 |     100 |     100 |                   
  TwoDice.tsx      |     100 |      100 |     100 |     100 |                   
 src/interfaces    |       0 |        0 |       0 |       0 |                   
  answer.ts        |       0 |        0 |       0 |       0 |                   
  question.ts      |       0 |        0 |       0 |       0 |                   
-------------------|---------|----------|---------|---------|-------------------

Test Suites: 1 failed, 12 passed, 13 total
Tests:       6 failed, 95 passed, 101 total
Snapshots:   0 total
Time:        8.016 s
Ran all test suites.
